Question Link: https://leetcode.com/problems/binary-tree-zigzag-level-order-traversal/

/**
 * Definition for a binary tree node.
 * public class TreeNode {
 * int val;
 * TreeNode left;
 * TreeNode right;
 * TreeNode() {}
 * TreeNode(int val) { this.val = val; }
 * TreeNode(int val, TreeNode left, TreeNode right) {
 * this.val = val;
 * this.left = left;
 * this.right = right;
 * }
 * }
 */
class Solution {
    public List<List<Integer>> zigzagLevelOrder(TreeNode root) {
        List<List<Integer>> answer = new ArrayList<>();
        Queue<TreeNode> queue = new LinkedList<>();
        queue.add(root);
        int level = 0;

        while (!queue.isEmpty()) {
            int currQueueSize = queue.size();
            List<Integer> result = new ArrayList<>();
            for (int i = 0; i < currQueueSize; i++) {
                TreeNode currNode = queue.poll();
                if (currNode != null) {
                    result.add(currNode.val);
                    if (currNode.left != null) {
                        queue.add(currNode.left);
                    }
                    if (currNode.right != null) {
                        queue.add(currNode.right);
                    }
                }
            }
            if (!result.isEmpty()) {
                if (level % 2 == 1) {
                    Collections.reverse(result);
                }
                answer.add(result);
            }
            level++;
        }

        return answer;
    }
}
