Question Link: https://leetcode.com/problems/path-sum-iii/

/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    int counter = 0;
    public int pathSum(TreeNode root, int targetSum) {
        if (root == null) {
            return 0;
        }
        pathSumHelper(root, targetSum, 0l);
        if (root.left != null) {
            pathSum(root.left, targetSum);
        } 
        if (root.right != null) {
            pathSum(root.right, targetSum);
        }

        return counter;
    }
    public void pathSumHelper(TreeNode root, int targetSum, long currSum) {
        if (root == null) {
            return;
        }
        currSum = currSum + root.val;
        if (currSum == targetSum) {
            counter = counter + 1;
        }
        if (root.left != null) {
            pathSumHelper(root.left, targetSum, currSum);
        }
        if (root.right != null) {
            pathSumHelper(root.right, targetSum, currSum);
        }
    }
}
